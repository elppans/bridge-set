#!/bin/bash

# Verifica se os comandos necessários estão disponíveis
if ! command -v ip >/dev/null || ! command -v nmcli >/dev/null ; then
    echo "Erro: Este script requer 'iproute2' e 'NetworkManager'.."
    echo "Por favor, instale as dependências antes de executar o script."
    exit 1
fi

if [ -f "/opt/bridge_ip/bridge_ip.conf" ]; then
    . /opt/bridge_ip/bridge_ip.conf
fi

# Verifica se o usuário especificou a Interface manualmente ou se o arquivo contém um Interface
if [ -n "$2" ]; then
    interfaces="$2"
    main_interface="$interfaces"
    main_connection="$(nmcli c show | grep ether | awk '{print $1}')"
else
# Detecta automaticamente as interfaces de rede físicas (ethernet)
interfaces=${interfaces:-"$(ip link show up | awk -F ': ' '/^[0-9]+:/ {print $2}' | grep -v '^lo$\|^vmnet\|^vnet\|^virbr\|^br')"}

# Seleciona a primeira interface detectada como a principal
main_interface=$(echo "$interfaces" | head -n 1)

# Seleciona o nome da interface NetworkManager
# O "Nome da Conexão" NÃO deve ter espaços
#main_connection="$(nmcli -t -f GENERAL.CONNECTION device show $main_interface | cut -f 2 -d ':')"
#main_connection="$(nmcli -g GENERAL.CONNECTION device show $main_interface)"
main_connection="$(nmcli c show | grep ether | awk '{print $1}')"
fi

# Verifica se o usuário especificou um IP manualmente ou se o arquivo contém um IP
if [ -n "$1" ]; then
    bridge_ip="$1"
else
    # Calcula o IP aumentado em 1 (maior que o IP da interface principal)

    #nmcli connection up $main_connection
    #nmcli device connect $interfaces
    nmcli networking on

    # Tenta obter o endereço IP até três vezes
    main_ip=$(ip addr show dev "$main_interface" | awk '/inet / {split($2, a, "/"); print a[1]}')
    main_ip1=$(echo "$main_ip" | cut -d '.' -f 1)
    main_ip2=$(echo "$main_ip" | cut -d '.' -f 2)
    main_ip3=$(echo "$main_ip" | cut -d '.' -f 3)
    main_ip_last_octet=$(echo "$main_ip" | cut -d '.' -f 4)
    main_ip_last_octet_soma="$(expr 1 + $main_ip_last_octet)"
    bridge_ip=${bridge_ip:-"$main_ip1.$main_ip2.$main_ip3.$main_ip_last_octet_soma/24"}
    bridge_mask=${bridge_mask:-""}
    bridge_gw=${bridge_gw:-""}
fi

# Cria uma interface bridge
ip link add br0 type bridge

# Adiciona as interfaces físicas à Bridge
for iface in $interfaces; do
    ip link set $iface up
    ip link set $iface master br0
done

# Configura o IP fixo para a Bridge
ip address add dev br0 $bridge_ip

# Configura a máscara para a Bridge
if [ ! -n "$bridge_mask" ]; then
	ip address add dev br0 $bridge_mask
fi

# Configura o Gateway para a Bridge
if [ ! -n "$bridge_gw" ]; then
	sudo ip route add default via $bridge_gw
fi

# Ativa a bridge
ip link set br0 up

# Recarrega a interface
nmcli connection reload "$main_connection"

# Reinicia a interface
nmcli c down "$main_connection"
nmcli c up "$main_connection"

# Exibe as informações da bridge
ip addr show br0

